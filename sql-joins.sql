-- List the number of films per category.
Use sakila;
select c.name, count(f.film_id) as number_films
from category as c
join film_category as f
on c.category_id = f.category_id
group by c.name;


-- Retrieve the store ID, city, and country for each store.
select s.store_id, c.city, co.country
from store as s 
join address as a
on a.address_id = s.address_id
join city as c
on a.city_id = c.city_id
join country as co
on c.country_id = co.country_id
group by s.store_id;

-- Calculate the total revenue generated by each store in dollars.
select c.name, sum(p.amount)
from category as c
join film_category as fc
on c.category_id = fc.category_id
join inventory as i
on fc.film_id = i.film_id
join rental as r
on i.inventory_id = r.inventory_id
join payment as p
on r.rental_id = p.rental_id
group by c.name;


select s.store_id, sum(p.amount) as amount_in_dollars
from store as s
join staff as sf
on s.store_id = sf.store_id
join payment as p
on sf.staff_id = p.staff_id
group by s.store_id;

-- Determine the average running time of films for each category.
select c.name, avg(f.length) as avg_length
from category as c
join film_category as fc
on c.category_id = fc.category_id
join film as f 
on fc.film_id = f.film_id
group by c.name;

-- Identify the film categories with the longest average running time.
select c.name, avg(f.length) as length
from category as c
join film_category as fc
on c.category_id = fc.category_id
join film as f 
on fc.film_id = f.film_id
group by c.name 
order by length desc
limit 1;

-- Display the top 10 most frequently rented movies in descending order.


